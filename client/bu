import { io } from "socket.io-client";

const $messBoard = document.getElementById("mess-board");
const $form = document.getElementById("form");
const $userName = document.getElementById("user-name");
const $connectBut = document.getElementById("connect-but");
const $messIn = document.getElementById("mess-in");
const $roomIn = document.getElementById("room-in");
const $roomBut = document.getElementById("room-but");
const $userlist = document.getElementById("userlist");
const $body = document.getElementById("body");
let socket;
let userSocket;
let activeUsers = [];
let rooms = [];
let newRoom = [];
$userName.value = "Anonymouse";
let newUser = [$userName.value];

$messIn.focus();

socket = io("http://localhost:3000");
userSocket = io("http://localhost:3000/user", {
  auth: { token: "test" },
});

socket.on("connect", async () => {
  await showMessage(`You connected with id: ${socket.id}`);
  //await addUserToList(newUser);
});

socket.on("disconnect", () => {
  showMessage(`You are disconnected from server`);
});

userSocket.on("connect_error", (error) => {
  showMessage(error);
});

socket.on("sendToClient", (message) => {
  showMessage(message);
});

function uppdateUsers(users) {
  activeUsers = users;
  console.log(users);
  $userlist.innerHTML = "";
  users.forEach((element) => {
    const $div = document.createElement("div");
    $div.textContent = element.name;
    $userlist.append($div);
  });
}
socket.on("sendUserToClient", (users) => {
  uppdateUsers(users);
});

$form.addEventListener("submit", (e) => {
  e.preventDefault;
  const userName = $userName.value;
  const userId = socket.id;
  const message = $messIn.value;
  const room = $roomIn.value;
  if (message === "") return;
  showMessage(message);
  socket.emit("sendToServer", message, room, userName, userId);
  $messIn.value = "";
});

$connectBut.addEventListener("click", () => {
  const userName = $userName.value;
  const userId = socket.id;
  socket.emit("sendUsersToServer", userId, userName);
});

window.addEventListener("load", () => {
  const userName = $userName.value;
  const userId = socket.id;
  const room = $roomIn.value;
  socket.emit("getUsers", room);
  socket.emit("getMessages", room);
});

$roomBut.addEventListener("click", () => {
  let newRoom;
  $roomIn.value = "Primary";
  const room = $roomIn.value;
  socket.emit("joinRoom", room, (message) => {
    showMessage(message);
    newRoom = {
      message: message,
      name: room,
    };
    rooms.push(newRoom);
    console.log(rooms);
  });
});

function showMessage(message) {
  const $div = document.createElement("div");
  $div.textContent = message;
  $messBoard.append($div);
}

let count = 0;
setInterval(() => {
  socket.emit("ping", ++count);
}, 1000);

document.addEventListener("keydown", (e) => {
  if (e.target.matches("input")) return;

  if (e.key === "c") socket.connect();
  if (e.key === "d") socket.disconnect();
});
